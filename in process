let iteration = 1;
let carX = 1500;

let offset = 0;
let offset2 = 0;
var strum = 1;

let longboi; //building
let post;
var c1, c2;

function setup(){
  frameRate(60);
    createCanvas(windowWidth, windowHeight);
    c1 = color(15, 20, 73);
    c2 = color(0);
    gradient(c1, c2);

  longboi = new Building();
  //post = new Lightpost();
}

function draw(){
iteration++;
  for(let i = 0; i < iteration; i++){

      longboi.change();
      longboi.build();

  if (iteration < 20){
      iteration = 0;
    }
  }

  fill(200); //car
  ellipse(carX, 500, 70, 32);
  carX = carX - 5;

  noStroke(); //erases previous car
  fill(5, 7, 24);
  ellipse(carX+50, 500, 70, 35);

  stroke(255); //waves
  noFill();
  beginShape();
  vertex(0, height);


  for(var x = 0; x < width; x++){

    var angle = offset + x * 0.05;

    var y = map(sin(angle), -strum, strum, 680, height); //maps
        vertex(x, y);
  }
  vertex(width, height/2);
  endShape();
  offset += 0.1;
  if(frameCount%2 == 0) /*|| if(frameCount%5 == 0)*/{
    noStroke();
fill(2, 2, 8);
rectMode(CENTER);
rect(400, 800, 2500, 300);
  }
}
  class Building{
    constructor(){
      this.x;
      this.y;
      this.width;
      this.height;
  }
    change(){ //changes this values (dynamically?)
      this.x = random(120, 200);
      this.y = 1;
      this.width = 200;
      this.height = 400;
  }
    build(){
      if (frameCount % 10 == 0){ //so that buildings don't appear too quickly
      stroke(200);
      fill(19, 20, 50);
      rectMode(CORNERS);
      rect(this.x*frameCount/40, this.y*random(120, 220), (this.x*frameCount/40)+random(50, 110), this.height);//allows rectangles to move right
  }
}
}
  function gradient(c1, c2) {

  noFill();
  for (var j = 0; j < height; j++) {
    var inter = map(j, 0, height, 0, 1);
    var c = lerpColor(c1, c2, inter);
    stroke(c);
    line(0, j, width, j);
  }
}
